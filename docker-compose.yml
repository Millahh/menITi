version: '3.8'

networks:
  app-network:

volumes:
  app-data:
  db-data:

services:

  webserver:
    image: nginx:1.21.6-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "1337:80"
    volumes:
      - ./:/var/www
      - .docker/nginx:/etc/nginx/conf.d
    networks:
      app-network:
    depends_on:
      - backend

  backend:
    build:
      context: .docker/php
      dockerfile: dockerfile
    container_name: backend
    environment:
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./:/var/www
      - .docker/php/php.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      app-network:
    depends_on:
      db:
        condition: service_healthy

  db:
    env_file:
      - .env
    image: postgres:latest
    container_name: db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USERNAME}", "-d", "${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
